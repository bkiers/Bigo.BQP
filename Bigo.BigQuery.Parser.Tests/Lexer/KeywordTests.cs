using BigO.BigQuery.Parser;
using Xunit;

namespace Bigo.BigQuery.Parser.Tests.Lexer;

public class KeywordTests : BaseLexerTest
{
    [Theory]
    [InlineData("ALL", BigQueryLexer.ALL)]
    [InlineData("AND", BigQueryLexer.AND)]
    [InlineData("ANY", BigQueryLexer.ANY)]
    [InlineData("ARRAY", BigQueryLexer.ARRAY)]
    [InlineData("AS", BigQueryLexer.AS)]
    [InlineData("ASC", BigQueryLexer.ASC)]
    [InlineData("ASSERT_ROWS_MODIFIED", BigQueryLexer.ASSERT_ROWS_MODIFIED)]
    [InlineData("AT", BigQueryLexer.AT)]
    [InlineData("BETWEEN", BigQueryLexer.BETWEEN)]
    [InlineData("BY", BigQueryLexer.BY)]
    [InlineData("CASE", BigQueryLexer.CASE)]
    [InlineData("CAST", BigQueryLexer.CAST)]
    [InlineData("COLLATE", BigQueryLexer.COLLATE)]
    [InlineData("CONTAINS", BigQueryLexer.CONTAINS)]
    [InlineData("CREATE", BigQueryLexer.CREATE)]
    [InlineData("CROSS", BigQueryLexer.CROSS)]
    [InlineData("CUBE", BigQueryLexer.CUBE)]
    [InlineData("CURRENT", BigQueryLexer.CURRENT)]
    [InlineData("DEFAULT", BigQueryLexer.DEFAULT)]
    [InlineData("DEFINE", BigQueryLexer.DEFINE)]
    [InlineData("DESC", BigQueryLexer.DESC)]
    [InlineData("DISTINCT", BigQueryLexer.DISTINCT)]
    [InlineData("ELSE", BigQueryLexer.ELSE)]
    [InlineData("END", BigQueryLexer.END)]
    [InlineData("ENUM", BigQueryLexer.ENUM)]
    [InlineData("ESCAPE", BigQueryLexer.ESCAPE)]
    [InlineData("EXCEPT", BigQueryLexer.EXCEPT)]
    [InlineData("EXCLUDE", BigQueryLexer.EXCLUDE)]
    [InlineData("EXISTS", BigQueryLexer.EXISTS)]
    [InlineData("EXTRACT", BigQueryLexer.EXTRACT)]
    [InlineData("FALSE", BigQueryLexer.FALSE)]
    [InlineData("FETCH", BigQueryLexer.FETCH)]
    [InlineData("FOLLOWING", BigQueryLexer.FOLLOWING)]
    [InlineData("FOR", BigQueryLexer.FOR)]
    [InlineData("FROM", BigQueryLexer.FROM)]
    [InlineData("FULL", BigQueryLexer.FULL)]
    [InlineData("GROUP", BigQueryLexer.GROUP)]
    [InlineData("GROUPING", BigQueryLexer.GROUPING)]
    [InlineData("GROUPS", BigQueryLexer.GROUPS)]
    [InlineData("HASH", BigQueryLexer.HASH)]
    [InlineData("HAVING", BigQueryLexer.HAVING)]
    [InlineData("IF", BigQueryLexer.IF)]
    [InlineData("IGNORE", BigQueryLexer.IGNORE)]
    [InlineData("IN", BigQueryLexer.IN)]
    [InlineData("INNER", BigQueryLexer.INNER)]
    [InlineData("INTERSECT", BigQueryLexer.INTERSECT)]
    [InlineData("INTERVAL", BigQueryLexer.INTERVAL)]
    [InlineData("INTO", BigQueryLexer.INTO)]
    [InlineData("IS", BigQueryLexer.IS)]
    [InlineData("JOIN", BigQueryLexer.JOIN)]
    [InlineData("LATERAL", BigQueryLexer.LATERAL)]
    [InlineData("LEFT", BigQueryLexer.LEFT)]
    [InlineData("LIKE", BigQueryLexer.LIKE)]
    [InlineData("LIMIT", BigQueryLexer.LIMIT)]
    [InlineData("LOOKUP", BigQueryLexer.LOOKUP)]
    [InlineData("MERGE", BigQueryLexer.MERGE)]
    [InlineData("NATURAL", BigQueryLexer.NATURAL)]
    [InlineData("NEW", BigQueryLexer.NEW)]
    [InlineData("NO", BigQueryLexer.NO)]
    [InlineData("NOT", BigQueryLexer.NOT)]
    [InlineData("NULL", BigQueryLexer.NULL)]
    [InlineData("NULLS", BigQueryLexer.NULLS)]
    [InlineData("OF", BigQueryLexer.OF)]
    [InlineData("ON", BigQueryLexer.ON)]
    [InlineData("OR", BigQueryLexer.OR)]
    [InlineData("ORDER", BigQueryLexer.ORDER)]
    [InlineData("OUTER", BigQueryLexer.OUTER)]
    [InlineData("OVER", BigQueryLexer.OVER)]
    [InlineData("PARTITION", BigQueryLexer.PARTITION)]
    [InlineData("PRECEDING", BigQueryLexer.PRECEDING)]
    [InlineData("PROTO", BigQueryLexer.PROTO)]
    [InlineData("QUALIFY", BigQueryLexer.QUALIFY)]
    [InlineData("RANGE", BigQueryLexer.RANGE)]
    [InlineData("RECURSIVE", BigQueryLexer.RECURSIVE)]
    [InlineData("RESPECT", BigQueryLexer.RESPECT)]
    [InlineData("RIGHT", BigQueryLexer.RIGHT)]
    [InlineData("ROLLUP", BigQueryLexer.ROLLUP)]
    [InlineData("ROWS", BigQueryLexer.ROWS)]
    [InlineData("SELECT", BigQueryLexer.SELECT)]
    [InlineData("SET", BigQueryLexer.SET)]
    [InlineData("SOME", BigQueryLexer.SOME)]
    [InlineData("STRUCT", BigQueryLexer.STRUCT)]
    [InlineData("TABLESAMPLE", BigQueryLexer.TABLESAMPLE)]
    [InlineData("THEN", BigQueryLexer.THEN)]
    [InlineData("TO", BigQueryLexer.TO)]
    [InlineData("TREAT", BigQueryLexer.TREAT)]
    [InlineData("TRUE", BigQueryLexer.TRUE)]
    [InlineData("UNBOUNDED", BigQueryLexer.UNBOUNDED)]
    [InlineData("UNION", BigQueryLexer.UNION)]
    [InlineData("UNNEST", BigQueryLexer.UNNEST)]
    [InlineData("USING", BigQueryLexer.USING)]
    [InlineData("WHEN", BigQueryLexer.WHEN)]
    [InlineData("WHERE", BigQueryLexer.WHERE)]
    [InlineData("WINDOW", BigQueryLexer.WINDOW)]
    [InlineData("WITH", BigQueryLexer.WITH)]
    [InlineData("WITHIN", BigQueryLexer.WITHIN)]
    [InlineData("BIGNUMERIC", BigQueryLexer.BIGNUMERIC)]
    [InlineData("DATE", BigQueryLexer.DATE)]
    [InlineData("DATETIME", BigQueryLexer.DATETIME)]
    [InlineData("NUMERIC", BigQueryLexer.NUMERIC)]
    [InlineData("TIMESTAMP", BigQueryLexer.TIMESTAMP)]
    [InlineData("YEAR", BigQueryLexer.YEAR)]
    [InlineData("QUARTER", BigQueryLexer.QUARTER)]
    [InlineData("MONTH", BigQueryLexer.MONTH)]
    [InlineData("WEEK", BigQueryLexer.WEEK)]
    [InlineData("DAY", BigQueryLexer.DAY)]
    [InlineData("HOUR", BigQueryLexer.HOUR)]
    [InlineData("MINUTE", BigQueryLexer.MINUTE)]
    [InlineData("SECOND", BigQueryLexer.SECOND)]
    [InlineData("MILLISECOND", BigQueryLexer.MILLISECOND)]
    [InlineData("MICROSECOND", BigQueryLexer.MICROSECOND)]
    [InlineData("JSON", BigQueryLexer.JSON)]
    [InlineData("OFFSET", BigQueryLexer.OFFSET)]
    [InlineData("NAME", BigQueryLexer.NAME)]
    [InlineData("STRICT", BigQueryLexer.STRICT)]
    [InlineData("CORRESPONDING", BigQueryLexer.CORRESPONDING)]
    [InlineData("DIFFERENTIAL_PRIVACY", BigQueryLexer.DIFFERENTIAL_PRIVACY)]
    [InlineData("OPTIONS", BigQueryLexer.OPTIONS)]
    [InlineData("VALUE", BigQueryLexer.VALUE)]
    [InlineData("REPLACE", BigQueryLexer.REPLACE)]
    [InlineData("SYSTEM", BigQueryLexer.SYSTEM)]
    [InlineData("PERCENT", BigQueryLexer.PERCENT)]
    [InlineData("PIVOT", BigQueryLexer.PIVOT)]
    [InlineData("UNPIVOT", BigQueryLexer.UNPIVOT)]
    [InlineData("SYSTEM_TIME", BigQueryLexer.SYSTEM_TIME)]
    [InlineData("ROW", BigQueryLexer.ROW)]
    [InlineData("INCLUDE", BigQueryLexer.INCLUDE)]
    [InlineData("FORMAT", BigQueryLexer.FORMAT)]
    [InlineData("SETS", BigQueryLexer.SETS)]
    [InlineData("AVG", BigQueryLexer.AVG)]
    [InlineData("SCHEMA", BigQueryLexer.SCHEMA)]
    [InlineData("TEMP", BigQueryLexer.TEMP)]
    [InlineData("TEMPORARY", BigQueryLexer.TEMPORARY)]
    [InlineData("TABLE", BigQueryLexer.TABLE)]
    [InlineData("CONSTRAINT", BigQueryLexer.CONSTRAINT)]
    [InlineData("ENFORCED", BigQueryLexer.ENFORCED)]
    [InlineData("PRIMARY", BigQueryLexer.PRIMARY)]
    [InlineData("KEY", BigQueryLexer.KEY)]
    [InlineData("FOREIGN", BigQueryLexer.FOREIGN)]
    [InlineData("REFERENCES", BigQueryLexer.REFERENCES)]
    [InlineData("CLUSTER", BigQueryLexer.CLUSTER)]
    [InlineData("CONNECTION", BigQueryLexer.CONNECTION)]
    [InlineData("ARRAY_AGG", BigQueryLexer.ARRAY_AGG)]
    [InlineData("COPY", BigQueryLexer.COPY)]
    [InlineData("SNAPSHOT", BigQueryLexer.SNAPSHOT)]
    [InlineData("CLONE", BigQueryLexer.CLONE)]
    [InlineData("VIEW", BigQueryLexer.VIEW)]
    [InlineData("DROP", BigQueryLexer.DROP)]
    [InlineData("SEARCH", BigQueryLexer.SEARCH)]
    [InlineData("INDEX", BigQueryLexer.INDEX)]
    [InlineData("VECTOR", BigQueryLexer.VECTOR)]
    [InlineData("ASSIGNMENT", BigQueryLexer.ASSIGNMENT)]
    [InlineData("RESERVATION", BigQueryLexer.RESERVATION)]
    [InlineData("CAPACITY", BigQueryLexer.CAPACITY)]
    [InlineData("ACCESS", BigQueryLexer.ACCESS)]
    [InlineData("POLICY", BigQueryLexer.POLICY)]
    [InlineData("POLICIES", BigQueryLexer.POLICIES)]
    [InlineData("PROCEDURE", BigQueryLexer.PROCEDURE)]
    [InlineData("FUNCTION", BigQueryLexer.FUNCTION)]
    [InlineData("EXTERNAL", BigQueryLexer.EXTERNAL)]
    [InlineData("MATERIALIZED", BigQueryLexer.MATERIALIZED)]
    [InlineData("CASCADE", BigQueryLexer.CASCADE)]
    [InlineData("RESTRICT", BigQueryLexer.RESTRICT)]
    [InlineData("UNDROP", BigQueryLexer.UNDROP)]
    [InlineData("REPLICA", BigQueryLexer.REPLICA)]
    [InlineData("COLUMNS", BigQueryLexer.COLUMNS)]
    [InlineData("RETURNS", BigQueryLexer.RETURNS)]
    [InlineData("DETERMINISTIC", BigQueryLexer.DETERMINISTIC)]
    [InlineData("LANGUAGE", BigQueryLexer.LANGUAGE)]
    [InlineData("REMOTE", BigQueryLexer.REMOTE)]
    [InlineData("AGGREGATE", BigQueryLexer.AGGREGATE)]
    [InlineData("TYPE", BigQueryLexer.TYPE)]
    [InlineData("OUT", BigQueryLexer.OUT)]
    [InlineData("INOUT", BigQueryLexer.INOUT)]
    [InlineData("BEGIN", BigQueryLexer.BEGIN)]
    [InlineData("SECURITY", BigQueryLexer.SECURITY)]
    [InlineData("INVOKER", BigQueryLexer.INVOKER)]
    [InlineData("COALESCE", BigQueryLexer.COALESCE)]
    [InlineData("NULLIF", BigQueryLexer.NULLIF)]
    [InlineData("IFNULL", BigQueryLexer.IFNULL)]
    [InlineData("GRANT", BigQueryLexer.GRANT)]
    [InlineData("FILTER", BigQueryLexer.FILTER)]
    [InlineData("COLUMN", BigQueryLexer.COLUMN)]
    [InlineData("STORING", BigQueryLexer.STORING)]
    [InlineData("ALTER", BigQueryLexer.ALTER)]
    [InlineData("ADD", BigQueryLexer.ADD)]
    [InlineData("RENAME", BigQueryLexer.RENAME)]
    [InlineData("DATA", BigQueryLexer.DATA)]
    [InlineData("ORGANIZATION", BigQueryLexer.ORGANIZATION)]
    [InlineData("PROJECT", BigQueryLexer.PROJECT)]
    [InlineData("BI_CAPACITY", BigQueryLexer.BI_CAPACITY)]
    [InlineData("ANY_VALUE", BigQueryLexer.ANY_VALUE)]
    [InlineData("MAX", BigQueryLexer.MAX)]
    [InlineData("MIN", BigQueryLexer.MIN)]
    [InlineData("ARRAY_CONCAT_AGG", BigQueryLexer.ARRAY_CONCAT_AGG)]
    [InlineData("BIT_AND", BigQueryLexer.BIT_AND)]
    [InlineData("BIT_OR", BigQueryLexer.BIT_OR)]
    [InlineData("BIT_XOR", BigQueryLexer.BIT_XOR)]
    [InlineData("COUNT", BigQueryLexer.COUNT)]
    [InlineData("COUNTIF", BigQueryLexer.COUNTIF)]
    [InlineData("LOGICAL_AND", BigQueryLexer.LOGICAL_AND)]
    [InlineData("LOGICAL_OR", BigQueryLexer.LOGICAL_OR)]
    [InlineData("MAX_BY", BigQueryLexer.MAX_BY)]
    [InlineData("MIN_BY", BigQueryLexer.MIN_BY)]
    [InlineData("STRING_AGG", BigQueryLexer.STRING_AGG)]
    [InlineData("SUM", BigQueryLexer.SUM)]
    [InlineData("TIMEZONE", BigQueryLexer.TIMEZONE)]
    [InlineData("TIME", BigQueryLexer.TIME)]
    [InlineData("ASSERT", BigQueryLexer.ASSERT)]
    [InlineData("LOAD", BigQueryLexer.LOAD)]
    [InlineData("OVERWRITE", BigQueryLexer.OVERWRITE)]
    [InlineData("PARTITIONS", BigQueryLexer.PARTITIONS)]
    [InlineData("FILES", BigQueryLexer.FILES)]
    [InlineData("EXPORT", BigQueryLexer.EXPORT)]
    [InlineData("DECLARE", BigQueryLexer.DECLARE)]
    [InlineData("EXECUTE", BigQueryLexer.EXECUTE)]
    [InlineData("IMMEDIATE", BigQueryLexer.IMMEDIATE)]
    [InlineData("EXCEPTION", BigQueryLexer.EXCEPTION)]
    [InlineData("ERROR", BigQueryLexer.ERROR)]
    [InlineData("CALL", BigQueryLexer.CALL)]
    [InlineData("ELSEIF", BigQueryLexer.ELSEIF)]
    [InlineData("LOOP", BigQueryLexer.LOOP)]
    [InlineData("WHILE", BigQueryLexer.WHILE)]
    [InlineData("DO", BigQueryLexer.DO)]
    [InlineData("REPEAT", BigQueryLexer.REPEAT)]
    [InlineData("UNTIL", BigQueryLexer.UNTIL)]
    [InlineData("BREAK", BigQueryLexer.BREAK)]
    [InlineData("LEAVE", BigQueryLexer.LEAVE)]
    [InlineData("CONTINUE", BigQueryLexer.CONTINUE)]
    [InlineData("ITERATE", BigQueryLexer.ITERATE)]
    [InlineData("RETURN", BigQueryLexer.RETURN)]
    [InlineData("TRANSACTION", BigQueryLexer.TRANSACTION)]
    [InlineData("COMMIT", BigQueryLexer.COMMIT)]
    [InlineData("ROLLBACK", BigQueryLexer.ROLLBACK)]
    [InlineData("MESSAGE", BigQueryLexer.MESSAGE)]
    [InlineData("RAISE", BigQueryLexer.RAISE)]
    [InlineData("INSERT", BigQueryLexer.INSERT)]
    [InlineData("VALUES", BigQueryLexer.VALUES)]
    [InlineData("DELETE", BigQueryLexer.DELETE)]
    [InlineData("TRUNCATE", BigQueryLexer.TRUNCATE)]
    [InlineData("UPDATE", BigQueryLexer.UPDATE)]
    [InlineData("MATCHED", BigQueryLexer.MATCHED)]
    [InlineData("TARGET", BigQueryLexer.TARGET)]
    [InlineData("SOURCE", BigQueryLexer.SOURCE)]
    [InlineData("REVOKE", BigQueryLexer.REVOKE)]
    public void Test(string input, int tokenType)
    {
        SingleToken(input, tokenType);
        SingleToken(input.ToLowerInvariant(), tokenType);
    }
}