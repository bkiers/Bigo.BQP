using Xunit;

namespace Bigo.BigQuery.Parser.Tests.Parser;

public class ReservedTests : BaseParserTest
{
    [Theory]
    [InlineData("ALL")]
    [InlineData("AND")]
    [InlineData("ANY")]
    [InlineData("ARRAY")]
    [InlineData("AS")]
    [InlineData("ASC")]
    [InlineData("ASSERT_ROWS_MODIFIED")]
    [InlineData("AT")]
    [InlineData("BETWEEN")]
    [InlineData("BY")]
    [InlineData("CASE")]
    [InlineData("CAST")]
    [InlineData("COLLATE")]
    [InlineData("CONTAINS")]
    [InlineData("CREATE")]
    [InlineData("CROSS")]
    [InlineData("CUBE")]
    [InlineData("CURRENT")]
    [InlineData("DEFAULT")]
    [InlineData("DEFINE")]
    [InlineData("DESC")]
    [InlineData("DISTINCT")]
    [InlineData("ELSE")]
    [InlineData("END")]
    [InlineData("ENUM")]
    [InlineData("ESCAPE")]
    [InlineData("EXCEPT")]
    [InlineData("EXCLUDE")]
    [InlineData("EXISTS")]
    [InlineData("EXTRACT")]
    [InlineData("FALSE")]
    [InlineData("FETCH")]
    [InlineData("FOLLOWING")]
    [InlineData("FOR")]
    [InlineData("FROM")]
    [InlineData("FULL")]
    [InlineData("GROUP")]
    [InlineData("GROUPING")]
    [InlineData("GROUPS")]
    [InlineData("HASH")]
    [InlineData("HAVING")]
    [InlineData("IF")]
    [InlineData("IGNORE")]
    [InlineData("IN")]
    [InlineData("INNER")]
    [InlineData("INTERSECT")]
    [InlineData("INTERVAL")]
    [InlineData("INTO")]
    [InlineData("IS")]
    [InlineData("JOIN")]
    [InlineData("LATERAL")]
    [InlineData("LEFT")]
    [InlineData("LIKE")]
    [InlineData("LIMIT")]
    [InlineData("LOOKUP")]
    [InlineData("MERGE")]
    [InlineData("NATURAL")]
    [InlineData("NEW")]
    [InlineData("NO")]
    [InlineData("NOT")]
    [InlineData("NULL")]
    [InlineData("NULLS")]
    [InlineData("OF")]
    [InlineData("ON")]
    [InlineData("OR")]
    [InlineData("ORDER")]
    [InlineData("OUTER")]
    [InlineData("OVER")]
    [InlineData("PARTITION")]
    [InlineData("PRECEDING")]
    [InlineData("PROTO")]
    [InlineData("QUALIFY")]
    [InlineData("RANGE")]
    [InlineData("RECURSIVE")]
    [InlineData("RESPECT")]
    [InlineData("RIGHT")]
    [InlineData("ROLLUP")]
    [InlineData("ROWS")]
    [InlineData("SELECT")]
    [InlineData("SET")]
    [InlineData("SOME")]
    [InlineData("STRUCT")]
    [InlineData("TABLESAMPLE")]
    [InlineData("THEN")]
    [InlineData("TO")]
    [InlineData("TREAT")]
    [InlineData("TRUE")]
    [InlineData("UNBOUNDED")]
    [InlineData("UNION")]
    [InlineData("UNNEST")]
    [InlineData("USING")]
    [InlineData("WHEN")]
    [InlineData("WHERE")]
    [InlineData("WINDOW")]
    [InlineData("WITH")]
    [InlineData("WITHIN")]
    public void Test(string input)
    {
        ParseAllTokens(input, parser => parser.reserved());
    }
}